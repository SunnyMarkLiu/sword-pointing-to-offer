package src.最近公共祖先_满二叉树;

/**
 * 有一棵无穷大的满二叉树，其结点按根结点一层一层地从左往右依次编号，根结点编号为1。
 * 现在有两个结点a，b。请设计一个算法，求出a和b点的最近公共祖先的编号。
 *
 * 给定两个int a,b。为给定结点的编号。请返回a和b的最近公共祖先的编号。注意这里结点本身也可认为是其祖先。
 */
public class Solution {

    /**
     * 注意是满二叉树！且根节点从 1 开始编号，所以 rootIndex = child / 2
     *
     *           1
     *         /   \
     *        2     3
     *      /  \   / \
     *     4    5 6   7
     *    / \  /
     *   8   9 10
     *
     * 假如要查找 4 和 10 的公共祖先：
     * 1、a=4 < b=10，向上找到 10 的父节点, b = b / 2 = 5;
     * 2、a=4 < b=5, 继续b向上找父节点，b = b / 2 = 2;
     * 3、a=4 > b=2，a向上找父节点，a = a / 2 = 2;
     * 4、此时 a == b 此即最近公共父节点
     */
    public int getLCA(int a, int b) {
        if (a < 1 || b < 1)
            return -1;

        while (a != b) {
            if (a < b)
                b /= 2;
            else
                a /= 2;
        }
        return a;
    }
}